version: v2.0
# 应用信息
application:
  # dev开发环境 test测试环境 prod线上环境
  mode: dev
  # 应用名称
  name: apisix-go
  # 应用版本
  version: v1.0.0
  # 基础加密秘密
  base_secret: xwc1125
  #单元测试调试信息
  debug: false
# 服务信息
server:
  # 服务器ip，默认使用 0.0.0.0
  host: 0.0.0.0
  # 服务端口号
  port: 8088
  # 是否至此ipv6
  enable_ipv6: false
  # 读超时时间(单位:秒)
  read_timeout: 1
  # 写超时时间(单位:秒)
  writer_timeout: 2
  # ssl配置
  ssl:
    mod: disable # disable, oneway, twoway
    key_file: "./conf/certs/server_key.pem"
    cert_file: "./conf/certs/server.pem"
    ca_root_paths:
      - "./conf/certs/ca.pem"
  # 跨域配置
  cors:
    allowed_origins:
      - "*"
    allowed_methods:
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
      - "OPTIONS"
    allowed_headers:
      - "*" # authorization, origin, content-type, accept
    #    exposed_headers: "*"
    #    max_age: 3000 # 缓存时常（秒）
    allow_credentials: true
    debug: true
# 日志配置
log:
  console:
    console: true # 是否打印命令行工具端口
    level: 4 # 日志等级
    modules: "*" # 模块名称,显示所有"*"
    show_path: false # 是否显示打印的位置
    use_color: true # 是否使用颜色
  file:
    level: 3 # 日志等级
    save: false # 是否保存
    file_path: "./logs/logs" # 日志目录
    file_name: "errors.json"  # 日志文件名

etcd:
  endpoints: # 可以同时设置集群里的多个endpoint
    - "http://127.0.0.1:2379"     # multiple etcd address, if your etcd cluster enables TLS, please use https scheme,
  prefix: /apisix                 # apisix configurations prefix
  #timeout: 30                    # 30 seconds
  #resync_delay: 5                # when sync failed and a rest is needed, resync after the configured seconds plus 50% random jitter
  #health_check_timeout: 10       # etcd retry the unhealthy nodes after the configured seconds
  startup_retry: 2                # the number of retry to etcd during the startup, default to 2
  #username: root                 # etcd用户名
  #password: 5tHkHhYkjr6cQY       # etcd密码
  tls:
    #cert: /path/to/cert          # tls证书路径
    #key: /path/to/key            # tls私钥路径
    verify: true                  # whether to verify the etcd endpoint certificate when setup a TLS connection to etcd,
      # the default value is true, e.g. the certificate will be verified strictly.
    #sni:                         # the SNI for etcd TLS requests. If missed, the host part of the URL will be used.

    # HashiCorp Vault storage backend for sensitive data retrieval. The config shows an example of what APISIX expects if you
    # wish to integrate Vault for secret (sensetive string, public private keys etc.) retrieval. APISIX communicates with Vault
    # server HTTP APIs. By default, APISIX doesn't need this configuration.
    # vault:
    #   host: "http://0.0.0.0:8200"   # The host address where the vault server is running.
    #   timeout: 10                   # request timeout 30 seconds
    #   token: root                   # Authentication token to access Vault HTTP APIs
    #   prefix: kv/apisix             # APISIX supports vault kv engine v1, where sensitive data are being stored
    # and retrieved through vault HTTP APIs. enabling a prefix allows you to better enforcement of
    # policies, generate limited scoped tokens and tightly control the data that can be accessed
    # from APISIX.
